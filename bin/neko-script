#!/usr/bin/env node

/**
 * NekoScript - Un langage de programmation en fran√ßais
 * 
 * Ce script est le point d'entr√©e pour l'ex√©cution des commandes NekoScript
 * depuis le terminal. Il prend les arguments de la ligne de commande et les
 * transmet √† l'application CLI de NekoScript.
 * 
 * Commandes disponibles:
 * - ex√©cuter <fichier> : Ex√©cute un script NekoScript
 * - t√©l√©charger <package> : T√©l√©charge un package depuis le d√©p√¥t
 * - librairie <nom> : Installe une biblioth√®que
 * - publish <package> : Publie un package sur le d√©p√¥t
 * - lister : Liste les packages disponibles
 * - aide : Affiche l'aide
 * 
 * Exemples:
 * neko-script ex√©cuter hello.neko
 * neko-script t√©l√©charger mathavancee
 * neko-script aide
 */

// Affichage du logo si aucun argument n'est fourni
if (process.argv.length <= 2) {
  console.log(`
  ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
  ‚ïë                                           ‚ïë
  ‚ïë              NekoScript üê±                ‚ïë
  ‚ïë     Langage de programmation fran√ßais     ‚ïë
  ‚ïë                                           ‚ïë
  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
  
  Utilisez 'neko-script aide' pour voir les commandes disponibles.
  `);
  process.exit(0);
}

// Fonction pour v√©rifier si un module est disponible
function checkModuleAvailability(moduleName) {
  try {
    require.resolve(moduleName);
    return true;
  } catch (e) {
    return false;
  }
}

// V√©rification des d√©pendances requises
const requiredModules = ['antlr4', 'sqlite3'];
const missingModules = requiredModules.filter(module => !checkModuleAvailability(module));

if (missingModules.length > 0) {
  console.error(`\n\x1b[31m‚ö†Ô∏è  D√©pendances manquantes: ${missingModules.join(', ')}\x1b[0m`);
  console.error('\nPour r√©soudre ce probl√®me, ex√©cutez l\'une des commandes suivantes :');
  console.error('\n\x1b[33m# Dans le r√©pertoire du projet NekoScript:\x1b[0m');
  console.error(`npm install ${missingModules.join(' ')} --save`);
  console.error('\n\x1b[33m# Si vous avez install√© NekoScript globalement:\x1b[0m');
  console.error(`npm install -g ${missingModules.join(' ')}`);
  console.error('\nEnsuite, r√©essayez d\'ex√©cuter votre commande NekoScript.');
  process.exit(1);
}

// Ajout d'un gestionnaire d'erreurs global
process.on('uncaughtException', (err) => {
  console.error('\n\x1b[31m‚ö†Ô∏è  Erreur non g√©r√©e:\x1b[0m', err.message);
  
  // Messages d'erreur sp√©cifiques pour les probl√®mes courants
  if (err.message.includes('Cannot find module')) {
    const moduleName = err.message.match(/Cannot find module '([^']+)'/);
    if (moduleName && moduleName[1]) {
      console.error(`\n\x1b[33mLe module '${moduleName[1]}' est manquant. Installez-le avec:\x1b[0m`);
      console.error(`npm install ${moduleName[1]} --save`);
      console.error(`\nOu si vous avez install√© NekoScript globalement:\nnpm install -g ${moduleName[1]}`);
    }
  }
  
  console.error('\nSi ce probl√®me persiste, veuillez signaler cette erreur sur notre d√©p√¥t GitHub.');
  process.exit(1);
});

// Requis de l'application CLI NekoScript
try {
  require('../src/index.js');
} catch (err) {
  console.error('\n\x1b[31m‚ö†Ô∏è  Erreur lors du chargement de NekoScript:\x1b[0m', err.message);
  
  if (err.message.includes('Cannot find module')) {
    console.error('\n\x1b[33mConseil:\x1b[0m Il semble qu\'une d√©pendance soit manquante.');
    console.error('V√©rifiez que vous avez bien install√© toutes les d√©pendances requises:');
    console.error('npm install antlr4 sqlite3 --save');
  }
  
  process.exit(1);
}
