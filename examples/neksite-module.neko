// Module NekoScript pour la création de sites web
// Ce module permet de facilement créer des sites web avec variables personnalisées

nekImporter("interne");

// Configuration par défaut
var configDefaut = {
  titre: "Site NekoScript",
  description: "Un site créé avec NekoScript",
  couleurPrincipale: "#3498db",
  couleurSecondaire: "#2ecc71",
  auteur: "Utilisateur NekoScript",
  annee: 2025,
  pages: []
};

// Fonction pour créer le HTML d'une page complète
fonction creerHTML(titre, contenu, pageActive, config) {
  return `<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="description" content="${config.description}">
  <meta name="author" content="${config.auteur}">
  <title>${titre} - ${config.titre}</title>
  <style>
    /* Variables de couleurs */
    :root {
      --couleur-principale: ${config.couleurPrincipale};
      --couleur-secondaire: ${config.couleurSecondaire};
      --couleur-texte: #333;
      --couleur-fond: #f9f9f9;
      --couleur-fond-alt: #fff;
      --couleur-bordure: #ddd;
    }

    /* Reset et base */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Segoe UI', Arial, sans-serif;
      line-height: 1.6;
      color: var(--couleur-texte);
      background-color: var(--couleur-fond);
      min-height: 100vh;
      display: flex;
      flex-direction: column;
    }

    /* Mise en page */
    header {
      background-color: var(--couleur-fond-alt);
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
      padding: 1rem 0;
    }

    .nav-container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 2rem;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .logo {
      color: var(--couleur-principale);
      font-weight: bold;
      font-size: 1.5rem;
      text-decoration: none;
    }

    nav {
      display: flex;
      gap: 1.5rem;
    }

    nav a {
      color: var(--couleur-texte);
      text-decoration: none;
      transition: color 0.3s;
    }

    nav a:hover, nav a.active {
      color: var(--couleur-principale);
    }

    main {
      flex: 1;
      max-width: 1200px;
      margin: 0 auto;
      padding: 2rem;
      width: 100%;
    }

    .hero {
      text-align: center;
      padding: 3rem 0;
      border-bottom: 3px solid var(--couleur-principale);
      margin-bottom: 2rem;
    }

    .hero h1 {
      color: var(--couleur-principale);
      font-size: 2.5rem;
      margin-bottom: 1rem;
    }

    .contenu {
      max-width: 800px;
      margin: 0 auto;
    }

    h2 {
      margin: 2rem 0 1rem;
      color: var(--couleur-principale);
    }

    .feature-box {
      background-color: rgba(52, 152, 219, 0.1);
      border-left: 5px solid var(--couleur-principale);
      padding: 1.5rem;
      margin: 2rem 0;
    }

    .feature-box h3 {
      margin-bottom: 1rem;
    }

    ul {
      list-style-position: inside;
      margin-bottom: 1rem;
    }

    .btn {
      display: inline-block;
      background-color: var(--couleur-principale);
      color: white;
      padding: 0.75rem 1.5rem;
      text-decoration: none;
      border-radius: 4px;
      margin: 1.5rem 0;
      border: none;
      cursor: pointer;
      transition: background-color 0.3s;
    }

    .btn:hover {
      background-color: var(--couleur-principale);
      opacity: 0.9;
    }

    .btn-secondary {
      background-color: var(--couleur-secondaire);
      margin-left: 1rem;
    }

    footer {
      background-color: #333;
      color: white;
      text-align: center;
      padding: 1.5rem;
      margin-top: 3rem;
    }

    /* Formulaire */
    .form-group {
      margin-bottom: 1.5rem;
    }

    label {
      display: block;
      margin-bottom: 0.5rem;
      font-weight: bold;
    }

    input, textarea {
      width: 100%;
      padding: 0.75rem;
      border: 1px solid var(--couleur-bordure);
      border-radius: 4px;
      font-family: inherit;
      font-size: 1rem;
    }

    /* Responsive */
    @media (max-width: 768px) {
      .nav-container {
        flex-direction: column;
        gap: 1rem;
      }
      
      nav {
        width: 100%;
        justify-content: center;
      }
      
      .hero h1 {
        font-size: 2rem;
      }
    }

    /* Style personnalisé */
    ${config.stylePersonnalise || ''}
  </style>
</head>
<body>
  <header>
    <div class="nav-container">
      <a href="index.html" class="logo">${config.titre}</a>
      <nav>
        ${genererMenuNav(config.pages, pageActive)}
      </nav>
    </div>
  </header>

  <main>
    ${contenu}
  </main>

  <footer>
    <p>© ${config.annee} - ${config.auteur} | Site généré avec NekoScript</p>
  </footer>
</body>
</html>`;
}

// Fonction pour générer les liens de navigation
fonction genererMenuNav(pages, pageActive) {
  var liens = '';
  
  // Ajouter la page d'accueil si elle n'existe pas déjà
  var accueilExiste = faux;
  pour (var i = 0; i < pages.length; i++) {
    si (pages[i].nomFichier === 'index.html') {
      accueilExiste = vrai;
      arrêter;
    }
  }
  
  si (!accueilExiste) {
    liens += `<a href="index.html" class="${pageActive === 'index' ? 'active' : ''}">Accueil</a>`;
  }
  
  // Ajouter les autres pages
  pour (var i = 0; i < pages.length; i++) {
    var page = pages[i];
    var nomFichier = page.nomFichier || (page.titre.toLowerCase().replace(/ /g, '-') + '.html');
    liens += `<a href="${nomFichier}" class="${pageActive === nomFichier ? 'active' : ''}">${page.titre}</a>`;
  }
  
  retourner liens;
}

// Module principal
var neksite = {
  // Méthode principale pour créer un site
  creer: fonction(options) {
    // Fusion des options avec la configuration par défaut
    var config = {};
    pour (var cle dans configDefaut) {
      config[cle] = configDefaut[cle];
    }
    pour (var cle dans options) {
      config[cle] = options[cle];
    }
    
    // Création du répertoire de sortie
    nekExecuterJS(`
      const fs = require('fs');
      const path = require('path');
      
      // Répertoire de sortie
      const outputDir = path.join(process.cwd(), 'site-output');
      if (!fs.existsSync(outputDir)) {
        fs.mkdirSync(outputDir, { recursive: true });
      }
      
      console.log('Répertoire de sortie créé: ' + outputDir);
    `);
    
    // Générer la page d'accueil par défaut si aucune page n'est définie
    si (config.pages.length === 0) {
      var contenuAccueil = `
        <section class="hero">
          <h1>${config.titre}</h1>
          <p>${config.description}</p>
        </section>
        
        <section class="contenu">
          <h2>Bienvenue sur notre site!</h2>
          <p>Ce site a été créé avec NekoScript. Vous pouvez personnaliser son contenu en modifiant le script NekoScript.</p>
          
          <div class="feature-box">
            <h3>Pour commencer</h3>
            <p>Ajoutez des pages à votre site en définissant l'option 'pages' dans l'appel à neksite.creer.</p>
          </div>
        </section>
      `;
      
      config.pages.ajouter({
        titre: "Accueil",
        contenu: contenuAccueil,
        nomFichier: "index.html"
      });
    }
    
    // Générer chaque page
    pour (var i = 0; i < config.pages.length; i++) {
      var page = config.pages[i];
      var nomFichier = page.nomFichier || (page.titre.toLowerCase().replace(/ /g, '-') + '.html');
      var pageId = nomFichier.replace('.html', '');
      
      // Créer le fichier HTML
      nekExecuterJS(`
        const fs = require('fs');
        const path = require('path');
        
        // Écrire le fichier HTML
        fs.writeFileSync(
          path.join(process.cwd(), 'site-output', '${nomFichier}'),
          \`${creerHTML(page.titre, page.contenu, pageId, config)}\`,
          'utf8'
        );
        
        console.log('Page créée: ${nomFichier}');
      `);
    }
    
    // Message de réussite
    neko = (`Site web créé avec succès dans le répertoire site-output!`);
    
    // Démarrage d'un serveur pour visualiser le site
    nekExecuterJS(`
      const express = require('express');
      const path = require('path');
      const open = require('open');
      
      // Création du serveur Express
      const app = express();
      const port = 5000;
      
      // Servir les fichiers statiques
      app.use(express.static(path.join(process.cwd(), 'site-output')));
      
      // Route par défaut
      app.get('/', (req, res) => {
        res.sendFile(path.join(process.cwd(), 'site-output', 'index.html'));
      });
      
      // Démarrage du serveur
      const server = app.listen(port, '0.0.0.0', () => {
        console.log(\`Serveur démarré sur http://localhost:\${port}\`);
        
        // Ouvrir le navigateur
        open(\`http://localhost:\${port}\`);
      });
    `);
    
    retourner "Site web généré avec succès!";
  }
};

// Exporter le module neksite
module.exports = neksite;